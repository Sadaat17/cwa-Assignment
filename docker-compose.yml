version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: courtroom_postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: courtroom_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - courtroom-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: courtroom_app
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/courtroom_db
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=courtroom_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - NODE_ENV=production
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://jaeger:4318
      - OTEL_SERVICE_NAME=courtroom-game
    depends_on:
      postgres:
        condition: service_healthy
      jaeger:
        condition: service_started
    networks:
      - courtroom-network

  migrate:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    image: assignment-1-migrate
    container_name: courtroom_migrate
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/courtroom_db
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=courtroom_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - NODE_ENV=development
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - courtroom-network
    command: ["npx", "sequelize-cli", "db:migrate"]

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: courtroom_jaeger
    ports:
      - "16686:16686"  # Jaeger UI
      - "4318:4318"    # OTLP HTTP receiver
    environment:
      - COLLECTOR_OTLP_ENABLED=true
    networks:
      - courtroom-network

volumes:
  postgres_data:

networks:
  courtroom-network:
    driver: bridge